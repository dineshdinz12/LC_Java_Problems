class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> queue=new LinkedList<TreeNode>();
        List<List<Integer>> wraplist=new LinkedList<List<Integer>>();
        
        if(root==null) return wraplist;

        queue.offer(root);
        while(!queue.isEmpty()){
            int size=queue.size();
            List<Integer> inner=new LinkedList<Integer>();
            for(int i=0;i<size;i++){
            if(queue.peek().left!=null)  queue.offer(queue.peek().left);
            if(queue.peek().right!=null) queue.offer(queue.peek().right);
            inner.add(queue.poll().val);
            }          
            wraplist.add(inner);
        }
    return wraplist;
    }
}
